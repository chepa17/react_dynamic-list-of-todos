{"version":3,"sources":["components/TodoItem/TodoItem.jsx","components/TodoList/TodoList.jsx","components/TodoLoad/TodoLoad.jsx","App.js","index.js"],"names":["TodoItem","_ref","todo","react_default","a","createElement","title","href","concat","user","email","name","completed","TodoList","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","isSorted","sortType","todos","sorting","bind","assertThisInitialized","typeofSort","setState","_this2","todoList","toConsumableArray","sort","b","className","type","onClick","map","TodoItem_TodoItem","key","id","Component","defaultProps","TodoLoad","getTodosWithUsers","userList","userMap","Map","forEach","set","_objectSpread","get","userId","getDataFromServer","asyncToGenerator","regenerator_default","mark","_callee","url","wrap","_context","prev","next","abrupt","fetch","then","response","json","stop","_x","apply","arguments","users","isLoading","usersUrl","todosUrl","loadTodos","Promise","all","_this$state","components_TodoList_TodoList","App","components_TodoLoad_TodoLoad","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.f8d3f504.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction TodoItem({ todo }) {\n  return (\n    <tr>\n      <td>{todo.title}</td>\n      <td><a href={`mailto:${todo.user.email}`}>{todo.user.name}</a></td>\n      <td>{todo.completed ? 'complite' : 'in progress'}</td>\n    </tr>\n  );\n}\n\nTodoItem.propTypes = {\n  todo: PropTypes.shape({\n    title: PropTypes.string.isRequired,\n    completed: PropTypes.bool.isRequired,\n    user: PropTypes.shape({\n      name: PropTypes.string.isRequired,\n      email: PropTypes.string.isRequired,\n    }).isRequired,\n  }).isRequired,\n};\n\nexport default TodoItem;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport TodoItem from '../TodoItem/TodoItem';\n\nclass TodoList extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isSorted: false,\n      sortType: '',\n    };\n    this.todos = this.props.todos;\n    this.sorting = this.sorting.bind(this);\n  }\n\n  sorting(typeofSort) {\n    this.setState({\n      isSorted: true,\n      sortType: typeofSort,\n    });\n  }\n\n  render() {\n    const todoList = [...this.todos];\n    if (this.state.isSorted) {\n      switch (this.state.sortType) {\n        case 'Title':\n          todoList.sort((a, b) => (a.title > b.title ? 1 : -1));\n          break;\n        case 'Username':\n          todoList.sort((a, b) => (a.user.name > b.user.name ? 1 : -1));\n          break;\n        case 'Status':\n          todoList.sort((a, b) => a.completed - b.completed);\n          break;\n        default:\n          break;\n      }\n    }\n    return (\n      <table className=\"todo-list\">\n        <thead className=\"todo-list-head\">\n          <tr>\n            <td>\n              <button type=\"button\" onClick={() => this.sorting('Title')}>\n                Title\n              </button>\n            </td>\n            <td>\n              <button type=\"button\" onClick={() => this.sorting('Username')}>\n                Username\n              </button>\n            </td>\n            <td>\n              <button type=\"button\" onClick={() => this.sorting('Status')}>\n                Status\n              </button>\n            </td>\n          </tr>\n        </thead>\n        <tbody className=\"todo-list-body\">\n          {todoList.map(todo => <TodoItem todo={todo} key={todo.id} />)}\n        </tbody>\n      </table>\n    );\n  }\n}\n\nTodoList.defaultProps = {\n  todos: [],\n};\n\nTodoList.propTypes = {\n  todos: PropTypes.arrayOf(PropTypes.shape({\n    userId: PropTypes.number.isRequired,\n    id: PropTypes.number.isRequired,\n    title: PropTypes.string.isRequired,\n    completed: PropTypes.bool.isRequired,\n  })),\n};\n\nexport default TodoList;\n","import React, { Component } from 'react';\nimport TodoList from '../TodoList/TodoList';\n\nclass TodoLoad extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      users: null,\n      todos: null,\n      isLoading: false,\n    };\n    this.usersUrl = 'https://jsonplaceholder.typicode.com/users';\n    this.todosUrl = 'https://jsonplaceholder.typicode.com/todos';\n    this.loadTodos = this.loadTodos.bind(this);\n    this.getTodosWithUsers = this.getTodosWithUsers.bind(this);\n    this.getDataFromServer = this.getDataFromServer.bind(this);\n  }\n\n  getTodosWithUsers = (todoList, userList) => {\n    const userMap = new Map();\n    userList.forEach(user => userMap.set(user.id, user));\n\n    return todoList.map(todo => ({\n      ...todo,\n      user: userMap.get(todo.userId),\n    }));\n  }\n\n  getDataFromServer = async url => fetch(url)\n    .then(response => response.json());\n\n  async loadTodos() {\n    this.setState({\n      isLoading: true,\n    });\n    const [users, todos] = await Promise.all([\n      this.getDataFromServer(this.usersUrl),\n      this.getDataFromServer(this.todosUrl),\n    ]);\n    this.setState({\n      users,\n      todos,\n      isLoading: false,\n    });\n  }\n\n  render() {\n    const { todos, users, isLoading } = this.state;\n\n    return (!users || !todos) ? (\n      <button type=\"button\" onClick={this.loadTodos}>\n        {isLoading ? 'Loading...' : 'Load'}\n      </button>\n    ) : (\n      <TodoList todos={this.getTodosWithUsers(todos, users)} />\n    );\n  }\n}\n\nexport default TodoLoad;\n","import React from 'react';\nimport './App.css';\nimport TodoLoad from './components/TodoLoad/TodoLoad';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <h1>Dynamic list of todos</h1>\n      <TodoLoad />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}